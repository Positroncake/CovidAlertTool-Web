@page "/Report"
@using System.Net
@using CovidAlertTool.Shared
@inject HttpClient HttpClient
@inject IGeolocationService GeolocationService
<h3>Report A Case</h3>

<button @onclick="ReportAtGpsPos">Report a case at my current GPS position</button>
<br/>

<p>Latitude - Degrees Minutes Seconds</p>
<input @bind="_latD"/>
<input @bind="_latM"/>
<input @bind="_latS"/>
<p>Longitude - Degrees Minutes Seconds</p>
<input @bind="_lonD"/>
<input @bind="_lonM"/>
<input @bind="_lonS"/>

<button @onclick="ReportAtLatLon">Report a case at the inputted latitude/longitude coordinates</button>

@code {
    
    private String _latD, _latM, _latS;
    private String _lonD, _lonM, _lonS;

    GeolocationPosition _position = new GeolocationPosition { Coords = new GeolocationCoordinates { Latitude = 0d, Longitude = 0d } };

    protected override void OnInitialized()
    {
        GeolocationService.GetCurrentPosition(this, nameof(OnPositionReceived));
    }

    private async void ReportAtGpsPos()
    {
        var location = new Location
        {
            Latitude = _position.Coords.Latitude,
            Longitude = _position.Coords.Longitude,
            Name = DateTime.UtcNow
        };
        HttpResponseMessage response = await HttpClient.PostAsJsonAsync("LocationApi/ReportCase", location);
        while (response.StatusCode == HttpStatusCode.InternalServerError) response = await HttpClient.PostAsJsonAsync("LocationApi/ReportCase", location);
    }

    private async void ReportAtLatLon()
    {
        var location = new Location();
        if (D(_latD) < 0d) location.Latitude = D(_latD) - D(_latM) / 60 - D(_latS) / 3600;
        else location.Latitude = D(_latD) + D(_latM) / 60 + D(_latS) / 3600;
        if (D(_lonD) < 0d) location.Longitude = D(_lonD) - D(_lonM) / 60 - D(_lonS) / 3600;
        else location.Longitude = D(_lonD) + D(_lonM) / 60 + D(_lonS) / 3600;
        location.Name = DateTime.UtcNow;
        HttpResponseMessage response = await HttpClient.PostAsJsonAsync("LocationApi/ReportCase", location);
        while (response.StatusCode == HttpStatusCode.InternalServerError) response = await HttpClient.PostAsJsonAsync("LocationApi/ReportCase", location);
    }
    
    private static Double D(String str) // Convert to double for code cleanliness (typing Double.Parse every time will get messy)
    {
        return Double.Parse(str);
    }

    [JSInvokable]
    public void OnPositionReceived(GeolocationPosition position)
    {
        _position = position;
    }

    [JSInvokable]
    public void OnPositionError(GeolocationPositionError positionError)
    {
        _position = new GeolocationPosition { Coords = new GeolocationCoordinates { Latitude = 0d, Longitude = 0d } };
    }

}